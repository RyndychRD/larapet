version: '3.9'
include:
  - ./docker/redis/docker-compose.yml

services:
  laravel:
    container_name: $PROJECT_NAME-php
    build:
      context: ./
      dockerfile: ./docker/laravel/Dockerfile
      args:
        - DOCKER_LARAVEL_WORKDIR=${DOCKER_LARAVEL_WORKDIR}
        - DOCKER_LARAVEL_NODE_MAJOR_VERSION=${DOCKER_LARAVEL_NODE_MAJOR_VERSION}
        - DOCKER_LARAVEL_USER_ID=${DOCKER_LARAVEL_USER_ID}
    env_file: .env
    user: "$DOCKER_LARAVEL_USER_ID:$DOCKER_LARAVEL_USER_ID"
    volumes:
      - ./src:/var/www
      - ./docker/laravel/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./docker/laravel/php.ini:/usr/local/etc/php/php.ini
      - ./docker/laravel/xdebug.ini:/usr/local/etc/php/conf.d/zz-99-docker-php-ext-xdebug.ini
    deploy:
      resources:
        limits:
          cpus: $DOCKER_LARAVEL_CPU_LIMIT
          memory: $DOCKER_LARAVEL_MEMORY_LIMIT
        reservations:
          cpus: $DOCKER_LARAVEL_CPU_RESERVATION
          memory: $DOCKER_LARAVEL_MEMORY_RESERVATION
    networks:
      back-network:
      out-network:


  nginx:
    container_name: $PROJECT_NAME-nginx
    image: "nginx:$DOCKER_NGINX_VERSION"
    volumes:
      - "$DOCKER_NGINX_LOG:/var/log/nginx"
      - "$DOCKER_NGINX_CONF:/etc/nginx/conf.d"
    depends_on:
      - laravel
    ports:
      - "$DOCKER_NGINX_PORT:80"
    networks:
      back-network:
      out-network:


  postgres:
    container_name: $PROJECT_NAME-postgres
    image: "postgres:$DOCKER_DB_VERSION"
    #Сам инициализирует при отсутствии данных
    environment:
      POSTGRES_DB: "$DOCKER_DB_NAME"
      POSTGRES_USER: "$DOCKER_DB_ROOT_USER"
      POSTGRES_PASSWORD: "$DOCKER_DB_ROOT_PASSWORD"
      PGDATA: "/var/lib/postgresql/data"
    #Включение логов и указание папки
    command: [ "postgres", "-c", "logging_collector=on", "-c", "log_directory=/var/postgres/log" ]
    #Прокидывание пользователя. Важно для home linux систем
    user: "1000:1000"
    volumes:
      - "$DOCKER_DB_DATA:/var/lib/postgresql/data"
      - "$DOCKER_DB_LOG:/var/postgres/log"
    ports:
      - "$DOCKER_DB_PORT:5432"
    networks:
      back-network:

networks:
  back-network:
    name: $PROJECT_NAME-back-network
  out-network:
    name: $PROJECT_NETWORK

